import random

"""
1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
Об окончании ввода данных свидетельствует пустая строка.
"""
# file = open('test.txt', 'w')
# while True:
#     x = input()
#     if x != '': break
#     file.write(x + '\n')
# file.close()

"""
2. Создать текстовый файл (не программно), 
сохранить в нем несколько строк, выполнить подсчет количества строк, количества слов в каждой строке.
"""

# with open('test2.txt', 'r') as f:
#     lines = f.readlines()
#     print('Кол-во строк', len(lines))
#     for i, line in enumerate(lines, start=1):
#         print('В {} строке - {} слов'.format(i, len(line.split())))

"""
3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов. 
Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников. 
Выполнить подсчет средней величины дохода сотрудников.
"""

# myf = open('zp.txt', 'r', encoding='utf-8')
# for line in myf:
#     last_name, zp = line.split()
#     if int(zp) < 20000:
#         print(f'{last_name}')
# myf.close()

"""
4. Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные. 
При этом английские числительные должны заменяться на русские. 
Новый блок строк должен записываться в новый текстовый файл.
"""

# file1 = open('zad4.txt', encoding='utf-8')
# file1 = file1.readlines()
#
# file2 = open('zad4rus.txt', 'w')
# for line in file1:
#     if '1' in line:
#         line = line.replace('One', 'Один')
#     elif '2' in line:
#         line = line.replace('Two', 'Два')
#     elif '3' in line:
#         line = line.replace('Three', 'Три')
#     elif '4' in line:
#         line = line.replace('Four', 'Четыре')
#     file2.write(line)
#

"""
5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами. 
Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
"""
# f = open('summ.txt', 'w')
# f.write('1 2 3 4 5 f 4 6')
# for line in open('summ.txt', 'r'):
#     Type = line.split()
#     print(sum([int(i) for i in Type if str(i).isdigit()]))

"""
6. Необходимо создать (не программно) текстовый файл, где каждая строка описывает учебный предмет и наличие лекционных, 
практических и лабораторных занятий по этому предмету и их количество. Важно, чтобы для каждого предмета не обязательно 
были все типы занятий. Сформировать словарь, содержащий название предмета и общее количество занятий по нему. 
Вывести словарь на экран.
Примеры строк файла:
Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —

Пример словаря:
{“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}

"""

# my_dict = dict()
# with open('slov.txt', encoding='utf-8') as f:
#     lines = f.readlines()
#     for line in lines:
#         spline = line.split()
#         sub = spline[0]
#         sum_h = sum([int(x[:x.find('(')]) for x in spline[1:] if '(' in x])
#         my_dict[sub] = sum_h
#
# print(my_dict)

"""
7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название, 
форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.
Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. 
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. 
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]

Подсказка: использовать менеджеры контекста.

"""
import json
fdict = {}
a_marja = []
with open('zad7.txt') as f:
    lines = f.readlines()
    for line in lines:
        name, form, marja, zatrat = line.split()
        marja = int(marja) - int(zatrat)
        fdict[name] = marja
        if marja > 0:
            a_marja.append(marja)

a_marja = sum(a_marja) / len(a_marja)
out_info = [fdict, {'Marja': a_marja}]

with open('7.json', 'w') as f_json:
    json.dump(out_info, f_json)

with open('7.json') as f_json:
    print(json.load(f_json))
